trout <- do.call(rbind, trouts)
names(trout) <- c("trout.year", "lake", "trout", "trout.lo", "trout.hi", "rate", "rate.lo", "rate.hi")
# Only Superior and Huron trout are assessed in spring
trout$spawner.year <- ifelse((trout$lake==1 | trout$lake==3), trout$trout.year, trout$trout.year+1)
trout$wound.unit <- ifelse(trout$lake==5, '# A1 marks per 100 LAT >17"', '# A1-A3 marks per 100 LAT >21"')
rm(troutfiles, trouts, selcols, TROUTSUP, TROUTMIC, TROUTHUR, TROUTERI, TROUTONT)
}
{# Targets
sptargyrz <- list(1994:1998, 1988:1992, 1989:1993, 1991:1995, 1999:2003)
TARGET <- data.frame(lake=1:5, wound.target=rep(c(5, 2), c(4, 1)), wound.units=rep(c("A1-A3", "A1"), c(4, 1)), 
spawner.target=rep(NA, 5), sptarg.lo=rep(NA, 5), sptarg.hi=rep(NA, 5))
for(i in 1:5) {
pick5 <- spawner$spawner[spawner$lake==i & is.element(spawner$spawner.year, sptargyrz[[i]])]
TARGET$spawner.target[i] <- mean(pick5)
n <- length(pick5)
ci <- qnorm(1 - 0.05/2) * sqrt(var(pick5)) / sqrt(n)
#TARGET[i, 5:6] <- CI(pick5)# using t dist (estimated variance)
TARGET[i, 5:6] <- mean(pick5) + c(-1, 1)*ci# using z dist (known variance)
if(i==3) TARGET[i, 4:6] <- 0.25*TARGET[i, 4:6]
}
TARGET[6, 4:6] <- apply(TARGET[, 4:6], 2, sum)
TARGET[6, 1] <- 99
TARGET[6, 2] <- 5
TARGET[6, 3] <- "A1-A3"
targyrz <- apply(sapply(sptargyrz, range), 2, paste, collapse="-")
rm(pick5, sptargyrz)
name.targ <- paste("Status Targets ", TODAY, ".csv", sep="")
write.csv(TARGET, paste0(FOLDER, name.targ), row.names=F)
}
{# bubble plot data - spawner estimates and maximum larval estimates on  map
# adult data
stream <- read.csv(paste0(FOLDER, SPAWNER.STREAM))
stream$row <- 1:dim(stream)[1]
YEAR <- max(stream$year)
dfthis <- stream[stream$year == YEAR, ]
dfthis <- dfthis[order(dfthis$lake, -dfthis$combPE), ]
# prepare to plot spawner estimates on  map, showing source of estimate ... label those with highest estimates
max.dia.lat <- c(0.42, 0.39, 0.28, 0.28, 0.23)
space.below.lat <- c(0.15, 0.19, 0.16, 0.09, 0.07)
# streams that make up top 50% of adults in current year
selcols <- c("row", "lake", "country", "strname", "lasttrt", "trapcatch", "Emr", "CVmr", "est.source", "combPE")
top50adultsthisyear <- top50pct(dfvar=dfthis[, selcols], xvar="combPE", byvar="lake")
top50adultsthisyear$textpaste <- paste(top50adultsthisyear$strname, format(signif(top50adultsthisyear$combPE, 2), big.mark=",", trim=TRUE))
# max larval data
wb <- loadWorkbook(paste0(FOLDER, MAXLARVAE))
sheet1 <- getSheets(wb)[1]
maxlarvae <- readWorksheet(wb, sheet=sheet1)
names(maxlarvae) <- make.names(casefold(names(maxlarvae)), unique=TRUE, allow_=FALSE)
maxlarvae$row <- 1:dim(maxlarvae)[1]
# drop "river" or "creek" from stream name
namesplit <- strsplit(maxlarvae$stream.nam, " ")
nameend <- sapply(namesplit, function(x) rev(x)[1])
suffixes <- c("Brook", "Cr.", "Creek", "R.", "River", "Rivers")
maxlarvae$stream.nam <- sapply(namesplit, function(x) {
keep <- if(rev(x)[1] %in% suffixes) rev(x)[-1] else rev(x)
paste(rev(keep), collapse=" ")
})
# streams that make up top 50% of max larvae over many years
top50maxlarvae <- top50pct(dfvar=maxlarvae, xvar="estimate", byvar="lake")
top50maxlarvae$textpaste <- paste(top50maxlarvae$stream.nam, format(signif(top50maxlarvae$estimate, 2), big.mark=",", trim=TRUE))
rm(namesplit, nameend, suffixes)
}
{# All lakewide data combined
a <- merge(spawner, control, all=T)
ALL <- merge(a, trout, all=T)
ALL$treat.year <- ALL$spawner.year - 2
ALL <- ALL[!(is.na(ALL$spawner) & is.na(ALL$staff.days) & is.na(ALL$trout) & is.na(ALL$rate)), ]
# the season for Lake Huron has been confirmed by Ji He 4/13/09
ALL$season[is.element(ALL$lake, c(1, 3))] <- "spring"
ALL$season[is.element(ALL$lake, c(2, 4, 5))] <- "fall"
sel <- is.na(ALL$trout.year)
ALL$trout.year[sel] <- ifelse(ALL$season[sel]=="spring", ALL$spawner.year[sel], ALL$spawner.year[sel]-1)
# calculate five-year running mean for adults, marks, and trout
ALL <- ALL[order(ALL$lake, ALL$spawner.year), ]
varz <- c("spawner", "trout", "rate")
look <- ddply(.data=ALL[, c("lake", varz)], .variables=.(lake), .drop=FALSE, .fun=rollapply, width=5, FUN=CI, fill=NA, align="center")
names(look)[-(1:4)] <- paste(rep(varz, rep(3, length(varz))), rep(c("5mn", "5lo", "5hi"), length(varz)), sep=".")
ALL <- cbind(ALL, look[, -(1:4)])
name.dat <- paste("Status Metrics ", TODAY, ".csv", sep="")
write.csv(ALL, paste0(FOLDER, name.dat), row.names=F)
rm(spawner, control, a, trout, varz, look, wb, sheet1)
}
attach(ALL)
# status and trends
addPageBreak(this=doc, width=8.5, height=11, omi=c(1, 1, 1, 1))
heading("SEA LAMPREY STATUS IN THE GREAT LAKES")
# spawner status and 5-year trend
sp <- status.trend(bydat=lake[lake<6], timedat=spawner.year[lake<6], 
measdat.m=spawner[lake<6], measdat.l=spawn.lo[lake<6], measdat.h=spawn.hi[lake<6],
trend.length=5, response.stat=c("Below", "At", "Above *"), response.trend=c("Decreasing", "Steady", "Increasing *"),
bytar=1:5, targdat.m=TARGET$spawner.target[1:5], targdat.l=TARGET$sptarg.lo[1:5], targdat.h=TARGET$sptarg.hi[1:5])
# wounding status and 5-year trend
wo <- status.trend(bydat=lake[lake<6], timedat=trout.year[lake<6], 
measdat.m=rate[lake<6], measdat.l=rate.lo[lake<6], measdat.h=rate.hi[lake<6], other=spawner.year[lake<6], 
trend.length=5, response.stat=c("Below", "At", "Above *"), response.trend=c("Decreasing", "Steady", "Increasing *"),
bytar=1:5, targdat.m=TARGET$wound.target[1:5])
# trout 5-year trend
tr <- status.trend(bydat=lake[lake<6], timedat=trout.year[lake<6], 
measdat.m=trout[lake<6], measdat.l=trout.lo[lake<6], measdat.h=trout.hi[lake<6], other=spawner.year[lake<6], 
trend.length=5, response.stat=c("", "", ""), response.trend=c("Decreasing *", "Steady", "Increasing"),
bytar=1:5, targdat.m=rep(0, 5))
tab <- cbind(sp[, c("bydat", "stat", "trnd")],
wo[, c("timedat", "stat", "span", "trnd")],
tr[, c("span", "trnd")])
tab$bydat <- Lakenames[tab$bydat]
names(tab) <- c("Lake", 
"Adult\nStatus", "\nTrend",
"Marking\nYear", "\nStatus", "\nSpan", "\nTrend",
"Trout\nSpan", "\nTrend")
tabl("Status and trends of lake-wide status metrics: adult sea lamprey abundance, marking rates on lake trout,",
" and lake trout relative abundance.",
" Comparisons to targets are based on the most recent year of data available, ", sp$timedat[1],
", for adult abundance and as noted for marking rates in each lake.",
" Trends are based on the most recent 5 years of data available, ", sp$span[1], 
" for adult abundance and as noted for marking rates and lake trout in each lake.",
" Statuses and trends of concern are noted by an asterisk.", row.names=FALSE)
# REPORT CARD
# merge metrics data with targets
ALL2 <- merge(ALL, TARGET[, c("lake", "wound.target", "spawner.target")], all.x=TRUE)
# Average of spawner numbers relative to target and wounding rates relative to target
# 1 means 1*target (both metrics at or below target), 2 means 2*target (average of both metrics are double the target), etc.
ALL2$above.score <- 0.5 * (ALL2$spawner/ALL2$spawner.target + ALL2$rate/ALL2$wound.target)
# base line width and type on status average for last 5 years
last5 <- (YEAR - ALL2$spawner.year) < 4.5 & ALL2$lake < 6
mean5 <- tapply(ALL2$above.score[last5], ALL2$lake[last5], mean, na.rm=TRUE)
lwid <- round(rescale(mean5, c(1, 5)))
ltyp <- recode(lwid, 5:1, c(1, 5, 4, 2, 3))
last1 <- ALL2$spawner.year == YEAR & ALL2$lake < 6
picklake <- which.max(ALL2$above.score[last1])
selpick <- ALL2$spawner.year == YEAR & ALL2$lake == picklake
picksp <- (ALL2$spawner/ALL2$spawner.target)[selpick]
pickwr <- (ALL2$rate/ALL2$wound.target)[selpick]
picksa <- ALL2$above.score[selpick]
fig <- function() {
par(mar=c(4, 4, 0.5, 5))
plot(ALL2$spawner.year, ALL2$above.score, type="n", xlim=range(ALL2$spawner.year[!is.na(ALL2$above.score)]), las=1, 
xlab="Spawning year", ylab="Status average, relative to target")
pusr <- par("usr")
polygon(pusr[c(1, 2, 2, 1)], c(pusr[c(3, 3)], 1, 1), col="lightgray", border=NA)
box()
for(i in 1:5) {
sel <- ALL2$lake==i
lines(ALL2$spawner.year[sel], ALL2$above.score[sel], col=blindcolz[c(2, 3, 4, 6, 8)[i]], lwd=lwid[i], lty=ltyp[i], lend="square")
mtext(Lakenames[i], at=ALL2$above.score[sel & ALL2$spawner.year==YEAR], col=blindcolz[c(2, 3, 4, 6, 8)[i]], side=4, las=2, line=0.5)
}
}
figu("Status average, relative to target, for each of the Great Lakes.",
"  The status average is the mean of the adult sea lamprey abundance (relative to target) and",
" the lake trout marking rate (relative to target).",
"  For example, for Lake ", Lakenames[picklake], " in spawning year ", YEAR, ", the adult sea lamprey abundance was ", round(picksp, 1), 
" times the target, the wounding rate was ", round(pickwr, 1), " times the target, and the status average was ", round(picksa, 1), ".",
h=3.29, w=3.96)
fig <- function() {
xr <- range(ALL2$spawner.year[!is.na(ALL2$spawner) | !is.na(ALL2$rate)])
par(mfrow=c(1, 2), mar=c(2, 2, 2, 4), oma=c(1, 1, 0, 0))
plot(ALL2$spawner.year, ALL2$spawner/ALL2$spawner.target, type="n", las=1, xlim=xr, ylim=range((ALL2$spawner/ALL2$spawner.target)[last5 & !is.na(ALL2$spawner)]),
xlab="", ylab="")
mtext("Adult sea lamprey abundance", side=3, line=0.5)
pusr <- par("usr")
polygon(pusr[c(1, 2, 2, 1)], c(pusr[c(3, 3)], 1, 1), col="lightgray", border=NA)
box()
for(i in 1:5) {
sel <- ALL2$lake==i
lines(ALL2$spawner.year[sel], (ALL2$spawner/ALL2$spawner.target)[sel], col=blindcolz[c(2, 3, 4, 6, 8)[i]], lwd=lwid[i], lty=ltyp[i], lend="square")
mtext(Lakenames[i], at=(ALL2$spawner/ALL2$spawner.target)[sel & ALL2$spawner.year==YEAR], col=blindcolz[c(2, 3, 4, 6, 8)[i]], side=4, las=2, line=0.5)
}
plot(ALL2$spawner.year, ALL2$rate/ALL2$wound.target, type="n", las=1, xlim=xr, ylim=range((ALL2$rate/ALL2$wound.target)[last5 & !is.na(ALL2$rate)]),
xlab="", ylab="")
mtext("Lake trout marking rate", side=3, line=0.5)
pusr <- par("usr")
polygon(pusr[c(1, 2, 2, 1)], c(pusr[c(3, 3)], 1, 1), col="lightgray", border=NA)
box()
for(i in 1:5) {
sel <- ALL2$lake==i
maxyr <- max(ALL2$spawner.year[sel & !is.na(ALL2$rate)])
lines(ALL2$spawner.year[sel], (ALL2$rate/ALL2$wound.target)[sel], col=blindcolz[c(2, 3, 4, 6, 8)[i]], lwd=lwid[i], lty=ltyp[i], lend="square")
mtext(Lakenames[i], at=(ALL2$rate/ALL2$wound.target)[sel & ALL2$spawner.year==maxyr], col=blindcolz[c(2, 3, 4, 6, 8)[i]], side=4, las=2, line=0.5)
}
mtext("Spawning year", side=1, outer=TRUE)
mtext("Relative to target", side=2, outer=TRUE)
}
figu("Status metrics, relative to target, for each of the Great Lakes.",
"  For example, for Lake ", Lakenames[picklake], " in spawning year ", YEAR, ", the adult sea lamprey abundance was ", round(picksp, 1), 
" times the target, and the wounding rate was ", round(pickwr, 1), " times the target.",
h=3.29, w=6.5)
fig <- function() {
xr <- range(ALL2$spawner.year[(YEAR - ALL2$spawner.year) < 4.5 & (!is.na(ALL2$spawner) | !is.na(ALL2$rate))])
par(mfrow=c(1, 2), mar=c(2, 2, 2, 4), oma=c(1, 1, 0, 0))
plot(ALL2$spawner.year, ALL2$spawner/ALL2$spawner.target, type="n", las=1, xlim=xr, ylim=range((ALL2$spawner/ALL2$spawner.target)[last5 & !is.na(ALL2$spawner)]),
xlab="", ylab="")
mtext("Adult sea lamprey abundance", side=3, line=0.5)
pusr <- par("usr")
polygon(pusr[c(1, 2, 2, 1)], c(pusr[c(3, 3)], 1, 1), col="lightgray", border=NA)
box()
for(i in 1:5) {
sel <- ALL2$lake==i
lines(ALL2$spawner.year[sel], (ALL2$spawner/ALL2$spawner.target)[sel], col=blindcolz[c(2, 3, 4, 6, 8)[i]], lwd=lwid[i], lty=ltyp[i], lend="square")
mtext(Lakenames[i], at=(ALL2$spawner/ALL2$spawner.target)[sel & ALL2$spawner.year==YEAR], col=blindcolz[c(2, 3, 4, 6, 8)[i]], side=4, las=2, line=0.5)
}
plot(ALL2$spawner.year, ALL2$rate/ALL2$wound.target, type="n", las=1, xlim=xr, ylim=range((ALL2$rate/ALL2$wound.target)[last5 & !is.na(ALL2$rate)]),
xlab="", ylab="")
mtext("Lake trout marking rate", side=3, line=0.5)
pusr <- par("usr")
polygon(pusr[c(1, 2, 2, 1)], c(pusr[c(3, 3)], 1, 1), col="lightgray", border=NA)
box()
for(i in 1:5) {
sel <- ALL2$lake==i
maxyr <- max(ALL2$spawner.year[sel & !is.na(ALL2$rate)])
lines(ALL2$spawner.year[sel], (ALL2$rate/ALL2$wound.target)[sel], col=blindcolz[c(2, 3, 4, 6, 8)[i]], lwd=lwid[i], lty=ltyp[i], lend="square")
mtext(Lakenames[i], at=(ALL2$rate/ALL2$wound.target)[sel & ALL2$spawner.year==maxyr], col=blindcolz[c(2, 3, 4, 6, 8)[i]], side=4, las=2, line=0.5)
}
mtext("Spawning year", side=1, outer=TRUE)
mtext("Relative to target", side=2, outer=TRUE)
}
windows()
fig()
xr
xr <- range(ALL2$spawner.year[(YEAR - ALL2$spawner.year) < 4.5 & (!is.na(ALL2$spawner) | !is.na(ALL2$rate))])
xr
paste(xr, collapse=", ")
paste(xr, collapse="-")
# C:\JVA\GLFC\People\Siefkes\Status Report Inputs.r
# change the text in quotes to match the files on your PC
# folder where all of the data files are stored
# make sure that you use forward slashes, /, in place of the usual back slashes, \
FOLDER <- "C:/JVA/GLFC/People/Siefkes/Status graphs/"
# file names of sea lamprey data
SPAWNER.LAKE<- "LakePEdynamic.csv"
SPAWNER.STREAM<- "StreamPEdynamic.csv"
CONTROL <- "Control Table.csv"
TROUTSUP<- "Trout Superior.csv"
TROUTMIC<- "Trout Michigan.csv"
TROUTHUR<- "Trout Huron.csv"
TROUTERI<- "Trout Erie.csv"
TROUTONT<- "Trout Ontario.csv"
MAXLARVAE<- "Max Larval Estimates Summary 2013.xls"
# file name of axis data (x- and y-axis ranges and tick marks)
AXISRANGES<- "AxisRanges.xls"
# file name of the latest status graphs R program
RPROGRAM<- "Status Report Program 1.4.r"
# do you want to install the latest version of the R package jvamisc?
INSTALL.LATEST<- FALSE
###################################################################################
# The rest of this information will likely stay the same from one year to the next.
# set the level of the historic sea lamprey spawner population for each lake
# Superior, Michigan, Huron, Erie, Ontario
HIST.SPAWN <- c(780, 600, 700, 40, 450)*1000
# run the program
source(paste0(FOLDER, RPROGRAM))
search()
detach()
cleanup()
q()
?vapply
require(stats); require(graphics)
x <- list(a = 1:10, beta = exp(-3:3), logic = c(TRUE,FALSE,FALSE,TRUE))
# compute the list mean for each list element
lapply(x, mean)
# median and quartiles for each list element
lapply(x, quantile, probs = 1:3/4)
sapply(x, quantile)
i39 <- sapply(3:9, seq) # list of vectors
sapply(i39, fivenum)
vapply(i39, fivenum,
       c(Min. = 0, "1st Qu." = 0, Median = 0, "3rd Qu." = 0, Max. = 0))
mapply(rep, 1:4, 4:1)
mapply(rep, times = 1:4, x = 4:1)
mapply(rep, times = 1:4, MoreArgs = list(x = 42))
mapply(function(x, y) seq_len(x) + y,
       c(a =  1, b = 2, c = 3),  # names from first
       c(A = 10, B = 0, C = -10))
word <- function(C, k) paste(rep.int(C, k), collapse = "")
utils::str(mapply(word, LETTERS[1:6], 6:1, SIMPLIFY = FALSE))
mapply(rep, times=1:4, x=42)
seq_len(4)
seq_len(1:4)
seq_len(2)
cleanup90
cleanup()
q()
x <- 1:10
res <- NULL
    if(length(x) < 2) return(1)
   vals <- rep.int(1, length(x))
    r <- chisq.out.test(x)
cleanup()
q()
library(devtools)
library(roxygen2)
# install from local folder
setwd("C:/JVA/GitHub")
install("jvamisc")
library(jvamisc)
?cheat
setwd("C:/JVA/GitHub")
install("artiFISHal")
setwd("C:/JVA/R/Working Directory")
library(artiFISHal)
?SimFIsh
?SimFish
q()
library(devtools)
library(roxygen2)
# install from local folder
setwd("C:/JVA/GitHub")
install("artiFISHal")
setwd("C:/JVA/R/Working Directory")
library(artiFISHal)
?SimFIsh
?SimFish
?artiFISHal
cite(roxygen2)
library(roxygen2)
cite(roxygen2)
cite
?cite
citation
citation(MASS)
?citation
citation("MASS")
citation("artiFISHal")
?person
citation("roxygen2")
getwd()
search()
cheat()
dfclip
dfclip()
dfclip()
500.251.40E-052.86380.18-64.220.50.020.55NANANANA50.5NANA
1400.21.40E-052.86380.18-64.220.50.070.02524.5NANA150.7NANA
1400.21.40E-052.86380.18-64.220.50.070.025280.3NANA150.7NANA
1400.21.40E-052.86380.18-64.220.50.070.0520.5NANA250.3NANA
1400.21.40E-052.86380.18-64.220.50.070.05260.1NANA250.3NANA
550.34.80E-063.03310.14-67.819.90.030.2NANANANA50.5NANA
1100.234.80E-063.03310.14-67.819.90.070.058.80.9NANA400.1NANA
1100.234.80E-063.03310.14-67.819.90.070.0519.40.5NANA400.1NANA
dfclip()
a <- dfclip()
a <- dfclip()
a
names(a)
b <- scan()
b <- scan()
LWC1
LWC2
LWCE
TSC1
TSC2
TSCE
Nprop
E
EE
N
NE
WD
WDE
D2B
D2BE
b <- scan()
LWC1
LWC2
LWCE
TSC1
TSC2
TSCE
Nprop
E
EE
N
NE
WD
WDE
D2B
D2BE
b <- scan("")
LWC1
LWC2
LWCE
TSC1
TSC2
TSCE
Nprop
E
EE
N
NE
WD
WDE
D2B
D2BE
b <- c("Z", "ZE", "LWC1", "LWC2", "LWCE", "TSC1", "TSC2", "TSCE", "Nprop", "E", "EE", "N", "NE", "WD", "WDE", "D2B", "D2BE")
b
a
names(a) <- b
a
a[c(1, 2, 6, 7), ]
dfclip()
a <- dfclip()
names(a) <- b
a
a[c(1, 2, 6, 7), ]
df <- a[c(1, 2, 6, 7), ]
A
a <- dfclip()
a
names(a) <- b
a
a[1:3, ]
a2 <- a[1:3, ]
a3 <- cbind(G = c("a", "A", "A"), Group = c("small alewife", "large alewife", "large alewife"), a2)
a3
dim(a3)
dput(a3)
fishp <- data.frame(
G = c("a", "A", "A"), 
Group = c("small alewife", "large alewife", "large alewife"), 
Z = c(50, 140, 140), ZE = c(0.25, 0.2, 0.2), 
LWC1 = 0.000014, LWC2 = c(2.8638, 2.8638, 2.8638), LWCE = c(0.18, 0.18, 0.18), 
TSC1 = c(-64.2, -64.2, -64.2), TSC2 = c(20.5, 20.5, 20.5), TSCE = c(0.02, 0.07, 0.07), 
Nprop = c(0.55, 0.25, 0.20), 
E = c(NA, 2, 28), EE = c(NA, 4.5, 0.3), 
N = c(NA, NA, NA), NE = c(NA, NA, NA), 
WD = c(5L, 15L, 15L), WDE = c(0.5, 0.7, 0.7), 
D2B = c(NA, NA, NA), D2BE = c(NA, NA, NA))
fishp
fishp <- data.frame(
G = c("a", "A", "A"), 
Group = c("small alewife", "large alewife", "large alewife"), 
Z = c(50, 140, 140), ZE = c(0.25, 0.2, 0.2), 
LWC1 = 0.000014, LWC2 = 2.8638, LWCE = 0.18, 
TSC1 = -64.2, TSC2 = 20.5, TSCE = c(0.02, 0.07, 0.07), 
Nprop = c(0.55, 0.25, 0.20), 
E = c(NA, 2, 28), EE = c(NA, 4.5, 0.3), 
N = NA, NE = NA, 
WD = c(5, 15, 15), WDE = c(0.5, 0.7, 0.7), 
D2B = NA, D2BE = NA)
fishp
fishp <- data.frame(
G = c("a", "A", "A"), 
Group = c("small alewife", "large alewife", "large alewife"), 
Z = c(50, 140, 140), ZE = c(0.25, 0.2, 0.2), 
LWC1 = 0.000014, LWC2 = 2.8638, LWCE = 0.18, 
TSC1 = -64.2, TSC2 = 20.5, TSCE = c(0.02, 0.07, 0.07), 
Nprop = c(0.55, 0.25, 0.20), 
E = c(NA, 2, 28), EE = c(NA, 4.5, 0.3), 
N = NA, NE = NA, 
WD = c(5, 15, 15), WDE = c(0.5, 0.7, 0.7), 
D2B = NA, D2BE = NA)
res <- SimFish(LakeName="Trout", LakeNick="T", LkWidth=3000, LkLength=2000, BotDepMin=20, BotDepMax=100, 
FishParam=fishp, TotNFish=1000)
LakeName="Trout"
LakeNick="T"
LkWidth=3000
LkLength=2000
BotDepMin=20
BotDepMax=100
BotDepVertex=200
FishParam=fishp
TotNFish=1000
TSRange=c(-65, -20)
plots.pdf=NA
Seed=NULL
if(!is.na(plots.pdf) & plots.pdf!=FALSE) pdf(plots.pdf, width=9, height=6.5, title="Diagnostics", paper="USr")
# total number of fish
FishParam$Nfish <- floor(FishParam$PropN * TotNFish / sum(FishParam$PropN))
FishParam <- FishParam[FishParam$Nfish > 0, ]
# minimum bottom depth, maximum bottom depth, and "vertex" bottom depth in m (z direction)
botdepr <- c(BotDepMin, BotDepMax, BotDepVertex)
# easting (m), range, (x direction)
eastr <- c(0, LkWidth)
# northing (m), range, (y direction)
northr <- c(0, LkLength)
# slopes and intercepts of west and east shores
slopes <- c( (botdepr[3]-botdepr[1])/(eastr[2]/3), (botdepr[1]-botdepr[3])/(2*eastr[2]/3) )
ints <- c(botdepr[1], -eastr[2]*slopes[2]+botdepr[1])
# distance from west and east shore excluded from lake in m (x direction)
d2shr.we <- c(0+ints[1]/slopes[1], -ints[2]/slopes[2]-eastr[2])
# distance to shore (m), range, (x direction)
mid.d <- ((eastr[1]-d2shr.we[1]) + (eastr[2]+d2shr.we[2]) ) / 2
d2shr <- c(min(d2shr.we), d2shr.we[1]+mid.d)
ishParam$PropN * TotNFish
FishParam$PropN * TotNFish
FishParam
fishp
FishParam=fishp
FishParam
FishParam$PropN * TotNFish
FishParam
fishp <- data.frame(
G = c("a", "A", "A"), 
Group = c("small alewife", "large alewife", "large alewife"), 
Z = c(50, 140, 140), ZE = c(0.25, 0.2, 0.2), 
LWC1 = 0.000014, LWC2 = 2.8638, LWCE = 0.18, 
TSC1 = -64.2, TSC2 = 20.5, TSCE = c(0.02, 0.07, 0.07), 
PropN = c(0.55, 0.25, 0.20), 
E = c(NA, 2, 28), EE = c(NA, 4.5, 0.3), 
N = NA, NE = NA, 
WD = c(5, 15, 15), WDE = c(0.5, 0.7, 0.7), 
D2B = NA, D2BE = NA)
res <- SimFish(LakeName="Trout", LakeNick="T", LkWidth=3000, LkLength=2000, BotDepMin=20, BotDepMax=100, 
FishParam=fishp, TotNFish=1000)
args(dfromx)
dfromx
?cheat
library(devtools)
setwd("C:/JVA/GitHub/jvamisc")
document()
setwd("C:/JVA/GitHub/artiFISHal")
document()
document()
q()
